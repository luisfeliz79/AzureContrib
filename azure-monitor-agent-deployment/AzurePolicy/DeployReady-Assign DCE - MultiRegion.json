{
  "properties": {
    "displayName": "Custom - CC - Assign DCE - MultiRegion",
    "description": "Assigns a data collection endpoint based on location",
    "mode": "Indexed",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "in": [
              "centralus",
              "eastus",
              "eastus2"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachines"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Compute/virtualMachineScaleSets"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageId",
                        "like": "[parameters('allowedVMImageId')]"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Insights/dataCollectionRuleAssociations",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "evaluationDelay": "PT0M",
          "existenceCondition": {
            "anyOf": [
              {
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId",
                "equals": "[parameters('EastUSDCEResourceId')]"
              },
              {
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId",
                "equals": "[parameters('EastUS2DCEResourceId')]"
              },
              {
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId",
                "equals": "[parameters('CentralUSDCEResourceId')]"
              }
            ]
          },
          "deployment": {
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "resourceName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "dcrResourceId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "resourceType": {
                    "type": "string"
                  }
                },
                "variables": {
                  "dcrAssociationName": "[concat('assoc-', uniqueString(concat(parameters('resourceName'), parameters('dcrResourceId'))))]",
                  "dceAssociationName": "configurationAccessEndpoint",
                  "dcrResourceType": "Microsoft.Insights/dataCollectionRules",
                  "dceResourceType": "Microsoft.Insights/dataCollectionEndpoints"
                },
                "resources": [
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]"
                  },
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]"
                  },
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]"
                  },
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]"
                  },
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]"
                  },
                  {
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "apiVersion": "2021-04-01",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]"
                  }
                ]
              },
              "parameters": {
                "resourceName": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "dcrResourceId": {
                  "value": "[if(equals(field('location'),'eastus'),parameters('EastUSDCEResourceId'),if(equals(field('location'),'eastus2'),parameters('EastUS2DCEResourceId'),if(equals(field('location'),'centralus'),parameters('CentralUSDCEResourceId'),'error')))]"
                },
                "type": {
                  "value": "[field('type')]"
                },
                "resourceType": {
                  "value": "Microsoft.Insights/dataCollectionEndpoints"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy.",
          "portalReview": "true"
        },
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists"
      },
      "allowedVMImageId": {
        "type": "String",
        "metadata": {
          "displayName": "The pattern of allowed image IDs (VMs or VMSS)",
          "description": "Allowed Linux VM or VMSS image name pattern. '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage*'",
          "portalReview": "true"
        },
        "defaultValue": ""
      },
      "EastUSDCEResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "Data Collection Endpoint for the East US Region",
          "description": "Resource Id of the Data Collection Endpoint for the East US Region to be applied on the Linux machines in scope.",
          "portalReview": "true"
        }
      },
      "EastUS2DCEResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "Data Collection Endpoint for the East US 2 Region",
          "description": "Resource Id of the Data Collection Endpoint for the East US 2 Region to be applied on the Linux machines in scope.",
          "portalReview": "true"
        }
      },
      "CentralUSDCEResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "Data Collection Endpoint for the Central US Region",
          "description": "Resource Id of the Data Collection Endpoint for the Central US Region to be applied on the Linux machines in scope.",
          "portalReview": "true"
        }
      }
    }
  }
}
