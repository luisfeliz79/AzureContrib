{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Firewall Logs Viewer\r\n### Log selection"
      },
      "customWidth": "75",
      "name": "text - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::tenant"
        ],
        "parameters": [
          {
            "id": "d3725483-3eea-4bb4-822c-bb43bf9ce5a9",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 2,
            "description": "The workspace that contains the firewall logs",
            "isRequired": true,
            "isGlobal": true,
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"",
            "crossComponentResources": [
              "value::tenant"
            ],
            "typeSettings": {
              "nameFilter": "*",
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resources/tenants"
          },
          {
            "id": "c7c3cb4d-800e-4ebb-8954-f6e410b22dde",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 1800000
            }
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resources/tenants"
      },
      "customWidth": "25",
      "name": "parameters - 5"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::all"
        ],
        "parameters": [
          {
            "id": "976eb040-b4c5-4a04-9bba-f954d945f26a",
            "version": "KqlParameterItem/1.0",
            "name": "Firewall",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| extend name = strcat(name,\"-\",location,\"-\",properties.ipConfigurations[0].properties.privateIPAddress)\r\n| project toupper(id),name\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": []
          },
          {
            "id": "60f7b5e5-dd2d-44c7-bb95-b886f8973542",
            "version": "KqlParameterItem/1.0",
            "name": "RuleType",
            "label": "Rule Type",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"label\":\"AzureFirewallApplicationRule\",\"value\":\"AzureFirewallApplicationRule\",\"selected\":\"true\"},{\"label\":\"AzureFirewallNetworkRule\",\"value\":\"AzureFirewallNetworkRule\",\"selected\":\"false\"}]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "dc3123ed-d9a6-4d34-b157-ddbefbaedafe",
            "version": "KqlParameterItem/1.0",
            "name": "Action",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{\"label\":\"Deny\",\"value\":\"Deny\",\"selected\":\"true\"},{\"label\":\"Allow\",\"value\":\"Allow\",\"selected\":\"false\"}]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 0"
    },
    {
      "type": 1,
      "content": {
        "json": "### Connection Filters"
      },
      "name": "text - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "99ee19be-2cd0-4b6d-a58b-f2c81ce75509",
            "version": "KqlParameterItem/1.0",
            "name": "Protocol",
            "type": 2,
            "isRequired": true,
            "query": "datatable(id:string, name:string, type:string) [\r\n    \"TCP\", \"TCP\",\"AzureFirewallNetworkRule\",\r\n    \"UDP\", \"UDP\",\"AzureFirewallNetworkRule\",\r\n    \"HTTPS\", \"HTTPS\",\"AzureFirewallApplicationRule\",\r\n    \"HTTP\", \"HTTP\",\"AzureFirewallApplicationRule\"   \r\n] \r\n| where type == \"{RuleType}\"\r\n| project id,name,type",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "8767b199-c447-4adb-a1a1-585bca6abc64",
            "version": "KqlParameterItem/1.0",
            "name": "DestinationPort",
            "label": "Destination Port",
            "type": 2,
            "query": "// Application rule log data \r\n// Parses the application rule log data. \r\nAzureDiagnostics\r\n| where TimeGenerated >= make_datetime({TimeRange:start}) and TimeGenerated <= make_datetime({TimeRange:end})\r\n| where ResourceId in ({Firewall})\r\n| where Category == \"{RuleType}\"\r\n//this first parse statement is valid for all entries as they all start with this format\r\n| parse msg_s with Protocol \" request from \" SourceIP \":\" SourcePort:int *\r\n| where Protocol == \"{Protocol}\" \r\n//Parse action as this is the same for all log lines \r\n| parse kind=regex flags=U msg_s with * \". Action\\\\: \" Action \"\\\\.\"\r\n// case1: Action: A. Reason: R.\r\n| parse kind=regex flags=U msg_s with \"\\\\. Reason\\\\: \" Reason \"\\\\.\"\r\n//case 2a: to FQDN:PORT Url: U. Action: A. Policy: P. Rule Collection Group: RCG. Rule Collection: RC. Rule: R.\r\n| parse msg_s with * \"to \" FQDN \":\" TargetPort:int * \".\" *\r\n//Parse policy if present\r\n| parse msg_s with * \". Policy: \" Policy \". Rule Collection Group: \" RuleCollectionGroup \".\" *\r\n| parse msg_s with * \" Rule Collection: \" RuleCollection \". Rule: \" Rule\r\n//case 2.b: Web Category: WC.\r\n| parse Rule with * \". Web Category: \" WebCategory\r\n//case 3: No rule matched. Proceeding with default action\"\r\n| extend DefaultRule = iff(msg_s contains \"No rule matched. Proceeding with default action\", true, false)\r\n| extend \r\nSourcePort = tostring(SourcePort),\r\nTargetPort = tostring(TargetPort)\r\n| extend \r\n Action = case(Action == \"\",\"N/A\", case(DefaultRule, \"Deny\" ,Action)),\r\n FQDN = case(FQDN == \"\", \"N/A\", FQDN),\r\n TargetPort = case(TargetPort == \"\", \"N/A\", tostring(TargetPort)),\r\n Policy = case(RuleCollection contains \":\", split(RuleCollection, \":\")[0] ,case(Policy == \"\", \"N/A\", Policy)),\r\n RuleCollectionGroup = case(RuleCollection contains \":\", split(RuleCollection, \":\")[1], case(RuleCollectionGroup == \"\", \"N/A\", RuleCollectionGroup)),\r\n RuleCollection = case(RuleCollection contains \":\", split(RuleCollection, \":\")[2], case(RuleCollection == \"\", \"N/A\", RuleCollection)),\r\n WebCategory = case(WebCategory == \"\", \"N/A\", WebCategory),\r\n Rule = case(Rule == \"\" , \"N/A\", case(WebCategory == \"N/A\", Rule, split(Rule, '.')[0])),\r\n Reason = case(Reason == \"\", case(DefaultRule, \"No rule matched - default action\", \"N/A\"), Reason )\r\n| where Action == \"{Action}\"\r\n| distinct TargetPort",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "c0ee5033-ae86-4e9e-9879-b4a44c5e314a",
            "version": "KqlParameterItem/1.0",
            "name": "DestinationIPorFQDN",
            "label": "Destination IP or FQDN",
            "type": 2,
            "query": "// Application rule log data \r\n// Parses the application rule log data. \r\nAzureDiagnostics\r\n| where TimeGenerated >= make_datetime({TimeRange:start}) and TimeGenerated <= make_datetime({TimeRange:end})\r\n| where ResourceId in ({Firewall})\r\n| where Category == \"{RuleType}\"\r\n//this first parse statement is valid for all entries as they all start with this format\r\n| parse msg_s with Protocol \" request from \" SourceIP \":\" SourcePort:int *\r\n| where Protocol == \"{Protocol}\" \r\n//Parse action as this is the same for all log lines \r\n| parse kind=regex flags=U msg_s with * \". Action\\\\: \" Action \"\\\\.\"\r\n// case1: Action: A. Reason: R.\r\n| parse kind=regex flags=U msg_s with \"\\\\. Reason\\\\: \" Reason \"\\\\.\"\r\n//case 2a: to FQDN:PORT Url: U. Action: A. Policy: P. Rule Collection Group: RCG. Rule Collection: RC. Rule: R.\r\n| parse msg_s with * \"to \" FQDN \":\" TargetPort:int * \".\" *\r\n//Parse policy if present\r\n| parse msg_s with * \". Policy: \" Policy \". Rule Collection Group: \" RuleCollectionGroup \".\" *\r\n| parse msg_s with * \" Rule Collection: \" RuleCollection \". Rule: \" Rule\r\n//case 2.b: Web Category: WC.\r\n| parse Rule with * \". Web Category: \" WebCategory\r\n//case 3: No rule matched. Proceeding with default action\"\r\n| extend DefaultRule = iff(msg_s contains \"No rule matched. Proceeding with default action\", true, false)\r\n| extend \r\nSourcePort = tostring(SourcePort),\r\nTargetPort = tostring(TargetPort)\r\n| extend \r\n Action = case(Action == \"\",\"N/A\", case(DefaultRule, \"Deny\" ,Action)),\r\n FQDN = case(FQDN == \"\", \"N/A\", FQDN),\r\n TargetPort = case(TargetPort == \"\", \"N/A\", tostring(TargetPort)),\r\n Policy = case(RuleCollection contains \":\", split(RuleCollection, \":\")[0] ,case(Policy == \"\", \"N/A\", Policy)),\r\n RuleCollectionGroup = case(RuleCollection contains \":\", split(RuleCollection, \":\")[1], case(RuleCollectionGroup == \"\", \"N/A\", RuleCollectionGroup)),\r\n RuleCollection = case(RuleCollection contains \":\", split(RuleCollection, \":\")[2], case(RuleCollection == \"\", \"N/A\", RuleCollection)),\r\n WebCategory = case(WebCategory == \"\", \"N/A\", WebCategory),\r\n Rule = case(Rule == \"\" , \"N/A\", case(WebCategory == \"N/A\", Rule, split(Rule, '.')[0])),\r\n Reason = case(Reason == \"\", case(DefaultRule, \"No rule matched - default action\", \"N/A\"), Reason )\r\n| where Action == \"{Action}\"\r\n| where TargetPort == \"{DestinationPort}\" or \"\" == \"{DestinationPort}\"\r\n| distinct FQDN",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "a40f8f67-8459-4259-b028-1a0d6d6c0c8c",
            "version": "KqlParameterItem/1.0",
            "name": "SourceIP",
            "type": 2,
            "query": "// Application rule log data \r\n// Parses the application rule log data. \r\nAzureDiagnostics\r\n| where TimeGenerated >= make_datetime({TimeRange:start}) and TimeGenerated <= make_datetime({TimeRange:end})\r\n| where ResourceId in ({Firewall})\r\n| where Category == \"{RuleType}\"\r\n//this first parse statement is valid for all entries as they all start with this format\r\n| parse msg_s with Protocol \" request from \" SourceIP \":\" SourcePort:int *\r\n| where Protocol == \"{Protocol}\" \r\n//Parse action as this is the same for all log lines \r\n| parse kind=regex flags=U msg_s with * \". Action\\\\: \" Action \"\\\\.\"\r\n// case1: Action: A. Reason: R.\r\n| parse kind=regex flags=U msg_s with \"\\\\. Reason\\\\: \" Reason \"\\\\.\"\r\n//case 2a: to FQDN:PORT Url: U. Action: A. Policy: P. Rule Collection Group: RCG. Rule Collection: RC. Rule: R.\r\n| parse msg_s with * \"to \" FQDN \":\" TargetPort:int * \".\" *\r\n//Parse policy if present\r\n| parse msg_s with * \". Policy: \" Policy \". Rule Collection Group: \" RuleCollectionGroup \".\" *\r\n| parse msg_s with * \" Rule Collection: \" RuleCollection \". Rule: \" Rule\r\n//case 2.b: Web Category: WC.\r\n| parse Rule with * \". Web Category: \" WebCategory\r\n//case 3: No rule matched. Proceeding with default action\"\r\n| extend DefaultRule = iff(msg_s contains \"No rule matched. Proceeding with default action\", true, false)\r\n| extend \r\nSourcePort = tostring(SourcePort),\r\nTargetPort = tostring(TargetPort)\r\n| extend \r\n Action = case(Action == \"\",\"N/A\", case(DefaultRule, \"Deny\" ,Action)),\r\n FQDN = case(FQDN == \"\", \"N/A\", FQDN),\r\n TargetPort = case(TargetPort == \"\", \"N/A\", tostring(TargetPort)),\r\n Policy = case(RuleCollection contains \":\", split(RuleCollection, \":\")[0] ,case(Policy == \"\", \"N/A\", Policy)),\r\n RuleCollectionGroup = case(RuleCollection contains \":\", split(RuleCollection, \":\")[1], case(RuleCollectionGroup == \"\", \"N/A\", RuleCollectionGroup)),\r\n RuleCollection = case(RuleCollection contains \":\", split(RuleCollection, \":\")[2], case(RuleCollection == \"\", \"N/A\", RuleCollection)),\r\n WebCategory = case(WebCategory == \"\", \"N/A\", WebCategory),\r\n Rule = case(Rule == \"\" , \"N/A\", case(WebCategory == \"N/A\", Rule, split(Rule, '.')[0])),\r\n Reason = case(Reason == \"\", case(DefaultRule, \"No rule matched - default action\", \"N/A\"), Reason )\r\n| where Action == \"{Action}\"\r\n| where TargetPort == \"{DestinationPort}\" or \"\" == \"{DestinationPort}\"\r\n| where FQDN == \"{DestinationIPorFQDN}\" or \"\" == \"{DestinationIPorFQDN}\"\r\n| distinct SourceIP",
            "crossComponentResources": [
              "{Workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 3"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Application rule log data \r\n// Parses the application rule log data. \r\nAzureDiagnostics\r\n| where TimeGenerated >= make_datetime({TimeRange:start}) and TimeGenerated <= make_datetime({TimeRange:end})\r\n| where ResourceId in ({Firewall})\r\n| where Category == \"{RuleType}\"\r\n//this first parse statement is valid for all entries as they all start with this format\r\n| parse msg_s with Protocol \" request from \" SourceIP \":\" SourcePort:int *\r\n| where Protocol == \"{Protocol}\" \r\n//Parse action as this is the same for all log lines \r\n| parse kind=regex flags=U msg_s with * \". Action\\\\: \" Action \"\\\\.\"\r\n// case1: Action: A. Reason: R.\r\n| parse kind=regex flags=U msg_s with \"\\\\. Reason\\\\: \" Reason \"\\\\.\"\r\n//case 2a: to FQDN:PORT Url: U. Action: A. Policy: P. Rule Collection Group: RCG. Rule Collection: RC. Rule: R.\r\n| parse msg_s with * \"to \" FQDN \":\" TargetPort:int * \".\" *\r\n//Parse policy if present\r\n| parse msg_s with * \". Policy: \" Policy \". Rule Collection Group: \" RuleCollectionGroup \".\" *\r\n| parse msg_s with * \" Rule Collection: \" RuleCollection \". Rule: \" Rule\r\n//case 2.b: Web Category: WC.\r\n| parse Rule with * \". Web Category: \" WebCategory\r\n//case 3: No rule matched. Proceeding with default action\"\r\n| extend DefaultRule = iff(msg_s contains \"No rule matched. Proceeding with default action\", true, false)\r\n| extend \r\nSourcePort = tostring(SourcePort),\r\nTargetPort = tostring(TargetPort)\r\n| extend \r\n Action = case(Action == \"\",\"N/A\", case(DefaultRule, \"Deny\" ,Action)),\r\n FQDN = case(FQDN == \"\", \"N/A\", FQDN),\r\n TargetPort = case(TargetPort == \"\", \"N/A\", tostring(TargetPort)),\r\n Policy = case(RuleCollection contains \":\", split(RuleCollection, \":\")[0] ,case(Policy == \"\", \"N/A\", Policy)),\r\n RuleCollectionGroup = case(RuleCollection contains \":\", split(RuleCollection, \":\")[1], case(RuleCollectionGroup == \"\", \"N/A\", RuleCollectionGroup)),\r\n RuleCollection = case(RuleCollection contains \":\", split(RuleCollection, \":\")[2], case(RuleCollection == \"\", \"N/A\", RuleCollection)),\r\n WebCategory = case(WebCategory == \"\", \"N/A\", WebCategory),\r\n Rule = case(Rule == \"\" , \"N/A\", case(WebCategory == \"N/A\", Rule, split(Rule, '.')[0])),\r\n Reason = case(Reason == \"\", case(DefaultRule, \"No rule matched - default action\", \"N/A\"), Reason )\r\n| where Action == \"{Action}\"\r\n| where TargetPort == \"{DestinationPort}\" or \"\" == \"{DestinationPort}\"\r\n| where FQDN == \"{DestinationIPorFQDN}\" or \"\" == \"{DestinationIPorFQDN}\"\r\n| where SourceIP == \"{SourceIP}\" or \"\" == \"{SourceIP}\"\r\n| project TimeGenerated,Action,FQDN,TargetPort,SourceIP,Protocol, ResourceId",
        "size": 0,
        "showAnalytics": true,
        "title": "Log Entries",
        "showRefreshButton": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "rowLimit": 5000
        }
      },
      "showPin": true,
      "name": "query - 4",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "v1.0"
      },
      "name": "text - 6"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}